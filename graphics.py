# Game Graphics Module
# Game Tile Page with Instructions to play 
def game_intro():
    print('''\033[31m
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0                                                                                                                  0 
0               ######## ####  ######     ########    ###     ######     ########  #######  ########               0
0   ##   ##        ##     ##  ##    ##       ##      ## ##   ##    ##       ##    ##     ## ##           ##   ##   0
0    ## ##         ##     ##  ##             ##     ##   ##  ##             ##    ##     ## ##            ## ##    0
0  #########       ##     ##  ##             ##    ##     ## ##             ##    ##     ## ######      #########  0
0    ## ##         ##     ##  ##             ##    ######### ##             ##    ##     ## ##            ## ##    0
0   ##   ##        ##     ##  ##    ##       ##    ##     ## ##    ##       ##    ##     ## ##           ##   ##   0
0                  ##    ####  ######        ##    ##     ##  ######        ##     #######  ########               0     
0                                                                                                                  0
0                                            Welcome to Tic Tac Toe!                                               0
0                       • The object of the game is to get three in a row.    7 | 8 | 9                            0
0                       • 'X' will always go first.                           4 | 5 | 6                            0
0                       • Select a number on the grid to make your move.      1 | 2 | 3                            0
0                                                                                                                  0
0                                                                                                                  0
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
        \033[39m''')

# Graphic to display if game is a Draw
def draw():
    print('''\033[32m
:::::::::  :::::::::      :::     :::       ::: 
:+:    :+: :+:    :+:   :+: :+:   :+:       :+: 
+:+    +:+ +:+    +:+  +:+   +:+  +:+       +:+ 
+#+    +:+ +#++:++#:  +#++:++#++: +#+  +:+  +#+ 
+#+    +#+ +#+    +#+ +#+     +#+ +#+ +#+#+ +#+ 
#+#    #+# #+#    #+# #+#     #+#  #+#+# #+#+#  
#########  ###    ### ###     ###   ###   ### 
        \033[39m''')

# Graphic to display CPU wins game
def loser():
    print('''\033[31m
:::   :::  ::::::::  :::    :::      :::        ::::::::   ::::::::  :::::::::: 
:+:   :+: :+:    :+: :+:    :+:      :+:       :+:    :+: :+:    :+: :+:        
 +:+ +:+  +:+    +:+ +:+    +:+      +:+       +:+    +:+ +:+        +:+        
  +#++:   +#+    +:+ +#+    +:+      +#+       +#+    +:+ +#++:++#++ +#++:++#   
   +#+    +#+    +#+ +#+    +#+      +#+       +#+    +#+        +#+ +#+        
   #+#    #+#    #+# #+#    #+#      #+#       #+#    #+# #+#    #+# #+#        
   ###     ########   ########       ########## ########   ########  ########## 
        \033[39m''')

# Graphic to display Player wins game
def winner():
    print('''\033[36m
:::       ::: ::::::::::: ::::    ::: ::::    ::: :::::::::: :::::::::  
:+:       :+:     :+:     :+:+:   :+: :+:+:   :+: :+:        :+:    :+: 
+:+       +:+     +:+     :+:+:+  +:+ :+:+:+  +:+ +:+        +:+    +:+ 
+#+  +:+  +#+     +#+     +#+ +:+ +#+ +#+ +:+ +#+ +#++:++#   +#++:++#:  
+#+ +#+#+ +#+     +#+     +#+  +#+#+# +#+  +#+#+# +#+        +#+    +#+ 
 #+#+# #+#+#      #+#     #+#   #+#+# #+#   #+#+# #+#        #+#    #+# 
  ###   ###   ########### ###    #### ###    #### ########## ###    ###
        \033[39m''')

# display board
def display_grid(board, Fore):
    # Variable passed in is a dictionary
    red = Fore.RED
    yellow = Fore.YELLOW
    
    print((Fore.YELLOW + '               •     • \n')  
         + (red + f'            {board[6]}  ')
         + (yellow + f'•')
         + (red + f'  {board[7]}  ')
         + (yellow + '•')
         + (red + f'  {board[8]} ')
         + (yellow + '\n')
         + ('               •     • \n')    
         + ('          ••••••••••••••••• \n')
         + ('               •     • \n') 
         + (red + f'            {board[3]}  ')
         + (yellow + '•')
         + (red + f'  {board[4]}  ')
         + (yellow + '•')
         + (red + f'  {board[5]} ')
         + (yellow + '\n')
         + ('               •     • \n')   
         + ('          ••••••••••••••••• \n')
         + ('               •     • \n')
         + (red + f'            {board[0]}  ')
         + (yellow + '•')
         + (red + f'  {board[1]}  ')
         + (yellow + '•')
         + (red + f'  {board[2]} ')
         + (yellow + '\n')
         + ('               •     • \n')   
         )      